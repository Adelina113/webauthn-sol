// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Test, console2} from "forge-std/Test.sol";
import {WebAuthn} from "../src/WebAuthn.sol";
import {Base64Url} from "FreshCryptoLib/utils/Base64Url.sol";

contract WebAuthnTest is Test {
    bytes challenge = abi.encode(0xf631058a3ba1116acce12396fad0a125b5041c43f8e15723709f81aa8d5f4ccf);

    function test_safari() public {
        uint256 x = 28573233055232466711029625910063034642429572463461595413086259353299906450061;
        uint256 y = 39367742072897599771788408398752356480431855827262528811857788332151452825281;
        WebAuthn.WebAuthnAuth memory auth = WebAuthn.WebAuthnAuth({
            authenticatorData: hex"49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000101",
            clientDataJSON: abi.encodePacked('{"type":"webauthn.get","challenge":"',Base64Url.encode(challenge),'","origin":"http://localhost:3005"}'),
            challengeIndex: 23,
            typeIndex: 1,
            r: 43684192885701841787131392247364253107519555363555461570655060745499568693242,
            s: 22655632649588629308599201066602670461698485748654492451178007896016452673579
        });
        assertTrue(WebAuthn.verify(challenge, false, auth, x, y));
    }

    function test_debug() public { 
      // bytes memory sig = hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000170000000000000000000000000000000000000000000000000000000000000001949fc7c88032b9fcb5f6efc7a7b8c63668eae9871b765e23123bb473ff57aa831a7c0d9276168ebcc29f2875a0239cffdf2a9cd1c2007c5c77c071db9264df1d000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008a7b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a2273496a396e6164474850596759334b7156384f7a4a666c726275504b474f716d59576f4d57516869467773222c226f726967696e223a2268747470733a2f2f7369676e2e636f696e626173652e636f6d222c2263726f73734f726967696e223a66616c73657d00000000000000000000000000000000000000000000";
      //   ERC4337Account.SignatureWrapper memory sigWrapper = abi.decode(sig, (ERC4337Account.SignatureWrapper));
        WebAuthn.WebAuthnAuth memory auth = abi.decode(hex"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000005c44e627ca047a87e9242b6d973e3f56a9017ce5c1bbd214b5058af86da2224f5006321e3ad2bd215a85908fc1241289c2b264bad8cfcb61ce94491d41bcbfb03b000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97631d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000727b226368616c6c656e6765223a224d346431375f5870375050747974305831302d346e52427a6e683557764b4645534736773043766f7a5641222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a33303035222c2274797065223a22776562617574686e2e676574227d0000000000000000000000000000", (WebAuthn.WebAuthnAuth)); 
        console2.log(string(auth.clientDataJSON));
        (uint x, uint y) = abi.decode(hex"b91a5f9531f52345a9a81c6095a955cc41c8c2ebf250d89135860c752657a9a075b7222fb6d5cc72c2e3d800f28b3b3d2a4595ed1fce0c61ce8ce907b5821bd3", (uint, uint));
        // console2.log(auth.origin);
        // console2.log(auth.crossOriginAndRemainder);
        bool ret = WebAuthn.verify({
            challenge: abi.encode(0x338775eff5e9ecf3edcadd17d74fb89d10739e1e56bca144486eb0d02be8cd50),
            requireUserVerification: false,
            webAuthnAuth: auth, 
            x: x, 
            y: y
        });
        console2.log(ret);
    }

    function test_chrome() public {
        uint256 x = 28573233055232466711029625910063034642429572463461595413086259353299906450061;
        uint256 y = 39367742072897599771788408398752356480431855827262528811857788332151452825281;
        WebAuthn.WebAuthnAuth memory auth = WebAuthn.WebAuthnAuth({
            authenticatorData: hex"49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000010a",
            clientDataJSON: abi.encodePacked('{"type":"webauthn.get","challenge":"',Base64Url.encode(challenge),'","origin":"http://localhost:3005","crossOrigin":false}'),
            challengeIndex: 23,
            typeIndex: 1,
            r: 29739767516584490820047863506833955097567272713519339793744591468032609909569,
            s: 45947455641742997809691064512762075989493430661170736817032030660832793108102
        });
        assertTrue(WebAuthn.verify(challenge, false, auth, x, y));
    }
}
